/**
 * OS2Kitos API - V2
 * <b><i>OBS: Dokumentation for V1 findes ved at skifte version på dokumentet til 1 øverst på siden</i></b><br/><br/>KITOS API V2 understøtter både læse- og skriveoperationer for de væsentlige registreringsobjekter i KITOS. <br/><br/>Se mere om designet og konventionerne i API\'et her: <a href=\'https://os2web.atlassian.net/wiki/spaces/KITOS/pages/2059599873/API+Design+V2\'>API V2</a>.<br/><br/>Generelt er anvendelsen af KITOS API(er) beskrevet på projektets <a href=\'https://os2web.atlassian.net/wiki/spaces/KITOS/pages/658145384/S+dan+kommer+du+igang\'>Confluence side</a>.<br/><br/><b>KENDTE FEJL OG BEGRÆNSNINGER PÅ DENNE HJÆLPESIDE SAMT WORKAROUND</b><br/>Felter der består af lister af enum værdier vises ikke rigtigt i denne UI. Konkret vises de mulige valg ikke, men i stedet vises \'Array[string]\'. For et retvisende billede af dokumentationen anbefales derfor følgende workaround:<br/><br/>- JSON downloades via \'docs linket i toppen\'<br/>- Indholdet indsættes i anden editor f.eks. <a href=\'https://editor.swagger.io\' target=\'_blank\'>Swagger.io</a><br/><br/><b>BEMÆRK</b>: Funktionen \'Try it out\' virker p.t. ikke i den eksterne editor.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { APICreateDataProcessingRegistrationRequestDTO } from '../model/models';
import { APIDataProcessingRegistrationResponseDTO } from '../model/models';
import { APIUpdateDataProcessingRegistrationRequestDTO } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface APIV2DataProcessingRegistrationServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Removes an existing data processing registration.
     * 
     * @param uuid UUID of the data processing registration
     */
    dELETEDataProcessingRegistrationV2DeleteDataProcessingRegistrationGuidUuid(uuid: string, extraHttpRequestParams?: any): Observable<object>;

    /**
     * Returns a specific Data-Processing-Registration
     * 
     * @param uuid UUID of Data-Processing-Registration entity
     */
    gETDataProcessingRegistrationV2GetDataProcessingRegistrationGuidUuid(uuid: string, extraHttpRequestParams?: any): Observable<APIDataProcessingRegistrationResponseDTO>;

    /**
     * Returns all Data-Processing-Registrations available to the user
     * 
     * @param organizationUuid Organization UUID filter
     * @param systemUuid System UUID filter
     * @param systemUsageUuid SystemUsage UUID filter
     * @param dataProcessorUuid UUID of a data processor in the registration
     * @param subDataProcessorUuid UUID of a sub data processor in the registration
     * @param agreementConcluded Filter based on whether or not an agreement has been concluded
     * @param changedSinceGtEq Include only changes which were LastModified (UTC) is equal to or greater than the provided value
     * @param page 0-based page number. Use this parameter to page through the requested collection.  Offset in the source collection will be (pageSize * page)  Range: [0,2^31] Default: 0
     * @param pageSize Size of the page referred by \&#39;page\&#39;.  Range: [1,100] Default: 100.
     */
    gETDataProcessingRegistrationV2GetDataProcessingRegistrationsBoundedPaginationQueryPaginationQueryNullable1AgreementConcludedNullable1ChangedSinceGtEqNullable1DataProcessorUuidNullable1OrganizationUuidNullable1SubDataProcessorUuidNullable1SystemUsageUuidNullable1SystemUuid(organizationUuid?: string, systemUuid?: string, systemUsageUuid?: string, dataProcessorUuid?: string, subDataProcessorUuid?: string, agreementConcluded?: boolean, changedSinceGtEq?: string, page?: number, pageSize?: number, extraHttpRequestParams?: any): Observable<Array<APIDataProcessingRegistrationResponseDTO>>;

    /**
     * Allows partial updates of an existing data processing registration using json merge patch semantics (RFC7396)
     * 
     * @param uuid UUID of the data processing registration
     * @param request 
     */
    pATCHDataProcessingRegistrationV2PatchDataProcessingRegistrationUpdateDataProcessingRegistrationRequestDTORequestGuidUuid(uuid: string, request: APIUpdateDataProcessingRegistrationRequestDTO, extraHttpRequestParams?: any): Observable<APIDataProcessingRegistrationResponseDTO>;

    /**
     * Create a new data processing registration
     * 
     * @param request 
     */
    pOSTDataProcessingRegistrationV2PostDataProcessingRegistrationCreateDataProcessingRegistrationRequestDTORequest(request: APICreateDataProcessingRegistrationRequestDTO, extraHttpRequestParams?: any): Observable<object>;

    /**
     * Perform a full update of an existing data processing registration.  Note: PUT expects a full version of the updated registration. For partial updates, please use PATCH.
     * 
     * @param uuid UUID of the data processing registration
     * @param request 
     */
    pUTDataProcessingRegistrationV2PutDataProcessingRegistrationUpdateDataProcessingRegistrationRequestDTORequestGuidUuid(uuid: string, request: APIUpdateDataProcessingRegistrationRequestDTO, extraHttpRequestParams?: any): Observable<APIDataProcessingRegistrationResponseDTO>;

}
