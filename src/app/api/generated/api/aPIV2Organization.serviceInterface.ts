/**
 * OS2Kitos API - V2
 * <b><i>OBS: Dokumentation for V1 findes ved at skifte version på dokumentet til 1 øverst på siden</i></b><br/><br/>KITOS API V2 understøtter både læse- og skriveoperationer for de væsentlige registreringsobjekter i KITOS. <br/><br/>Se mere om designet og konventionerne i API\'et her: <a href=\'https://os2web.atlassian.net/wiki/spaces/KITOS/pages/2059599873/API+Design+V2\'>API V2</a>.<br/><br/>Generelt er anvendelsen af KITOS API(er) beskrevet på projektets <a href=\'https://os2web.atlassian.net/wiki/spaces/KITOS/pages/658145384/S+dan+kommer+du+igang\'>Confluence side</a>.<br/><br/><b>KENDTE FEJL OG BEGRÆNSNINGER PÅ DENNE HJÆLPESIDE SAMT WORKAROUND</b><br/>Felter der består af lister af enum værdier vises ikke rigtigt i denne UI. Konkret vises de mulige valg ikke, men i stedet vises \'Array[string]\'. For et retvisende billede af dokumentationen anbefales derfor følgende workaround:<br/><br/>- JSON downloades via \'docs linket i toppen\'<br/>- Indholdet indsættes i anden editor f.eks. <a href=\'https://editor.swagger.io\' target=\'_blank\'>Swagger.io</a><br/><br/><b>BEMÆRK</b>: Funktionen \'Try it out\' virker p.t. ikke i den eksterne editor.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { OrganizationResponseDTO } from '../model/models';
import { OrganizationUnitResponseDTO } from '../model/models';
import { OrganizationUserResponseDTO } from '../model/models';
import { ShallowOrganizationResponseDTO } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface APIV2OrganizationServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Returns organization identified by uuid
     * 
     * @param organizationUuid UUID of the organization
     */
    gETOrganizationV2GetOrganizationGuidOrganizationUuid(organizationUuid: string, extraHttpRequestParams?: any): Observable<Array<OrganizationResponseDTO>>;

    /**
     * Returns the a specific organization unit inside an organization
     * 
     * @param organizationUuid UUID of the organization
     * @param organizationUnitId UUID of the organization unit in KITOS
     */
    gETOrganizationV2GetOrganizationUnitGuidOrganizationUuidGuidOrganizationUnitId(organizationUuid: string, organizationUnitId: string, extraHttpRequestParams?: any): Observable<OrganizationUnitResponseDTO>;

    /**
     * Returns the organization units of an organization if the authenticated user is a member of the organization.
     * 
     * @param organizationUuid UUID of the organization
     * @param nameQuery Query by text in name or email
     * @param changedSinceGtEq Include only changes which were LastModified (UTC) is equal to or greater than the provided value
     * @param page 0-based page number. Use this parameter to page through the requested collection.  Offset in the source collection will be (pageSize * page)  Range: [0,2^31] Default: 0
     * @param pageSize Size of the page referred by \&#39;page\&#39;.  Range: [1,100] Default: 100.
     */
    gETOrganizationV2GetOrganizationUnitsGuidOrganizationUuidStringNameQueryNullable1ChangedSinceGtEqBoundedPaginationQueryPaginationQuery(organizationUuid: string, nameQuery?: string, changedSinceGtEq?: string, page?: number, pageSize?: number, extraHttpRequestParams?: any): Observable<Array<OrganizationUnitResponseDTO>>;

    /**
     * Returns the a specific user within an organization
     * 
     * @param organizationUuid UUID of the organization
     * @param userUuid UUID of the user entity in KITOS
     */
    gETOrganizationV2GetOrganizationUserGuidOrganizationUuidGuidUserUuid(organizationUuid: string, userUuid: string, extraHttpRequestParams?: any): Observable<OrganizationUserResponseDTO>;

    /**
     * Returns the users of an organization if the authenticated user is a member of the organization.
     * 
     * @param organizationUuid UUID of the organization
     * @param nameOrEmailQuery Query by text in name or email
     * @param roleQuery Query by role assignment
     * @param page 0-based page number. Use this parameter to page through the requested collection.  Offset in the source collection will be (pageSize * page)  Range: [0,2^31] Default: 0
     * @param pageSize Size of the page referred by \&#39;page\&#39;.  Range: [1,100] Default: 100.
     */
    gETOrganizationV2GetOrganizationUsersGuidOrganizationUuidStringNameOrEmailQueryNullable1RoleQueryBoundedPaginationQueryPaginationQuery(organizationUuid: string, nameOrEmailQuery?: string, roleQuery?: 'User' | 'LocalAdmin' | 'OrganizationModuleAdmin' | 'SystemModuleAdmin' | 'ContractModuleAdmin' | 'RightsHolderAccess', page?: number, pageSize?: number, extraHttpRequestParams?: any): Observable<Array<OrganizationUserResponseDTO>>;

    /**
     * Returns organizations in which the current user has \&quot;RightsHolderAccess\&quot; permission
     * 
     * @param page 0-based page number. Use this parameter to page through the requested collection.  Offset in the source collection will be (pageSize * page)  Range: [0,2^31] Default: 0
     * @param pageSize Size of the page referred by \&#39;page\&#39;.  Range: [1,100] Default: 100.
     */
    gETOrganizationV2GetOrganizationsAsRightsHolderBoundedPaginationQueryPagination(page?: number, pageSize?: number, extraHttpRequestParams?: any): Observable<Array<ShallowOrganizationResponseDTO>>;

    /**
     * Returns organizations organizations from KITOS
     * 
     * @param onlyWhereUserHasMembership If set to true, only organizations where the user has role(s) will be included.
     * @param nameContent Optional query for name content
     * @param cvrContent Optional query on CVR number
     * @param page 0-based page number. Use this parameter to page through the requested collection.  Offset in the source collection will be (pageSize * page)  Range: [0,2^31] Default: 0
     * @param pageSize Size of the page referred by \&#39;page\&#39;.  Range: [1,100] Default: 100.
     */
    gETOrganizationV2GetOrganizationsBooleanOnlyWhereUserHasMembershipStringNameContentStringCvrContentBoundedPaginationQueryPagination(onlyWhereUserHasMembership?: boolean, nameContent?: string, cvrContent?: string, page?: number, pageSize?: number, extraHttpRequestParams?: any): Observable<Array<OrganizationResponseDTO>>;

}
